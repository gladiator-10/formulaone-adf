{
	"name": "pl_data_ingest",
	"properties": {
		"activities": [
			{
				"name": "act_copy_api_to_gen2",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "act_lookup_job_status1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ds_copy_api",
						"type": "DatasetReference",
						"parameters": {
							"rel_url": "seasons.json?limit=100"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ds_gen2_json",
						"type": "DatasetReference",
						"parameters": {
							"dir_path": {
								"value": "@concat('bronze/seasons/',string(utcnow('yyyyMMdd')))",
								"type": "Expression"
							},
							"file_name": "seasons.json"
						}
					}
				]
			},
			{
				"name": "act_lookup_seasons_data",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_copy_api_to_gen2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_gen2_json",
						"type": "DatasetReference",
						"parameters": {
							"dir_path": {
								"value": "@concat('bronze/seasons/',string(utcnow('yyyyMMdd')))",
								"type": "Expression"
							},
							"file_name": "seasons.json"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_for_seasons_iterate",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "act_lookup_seasons_data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('act_lookup_seasons_data').output.value[0].MRData.SeasonTable.Seasons",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 5,
					"activities": [
						{
							"name": "act_copy_race_file",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ds_api_race",
									"type": "DatasetReference",
									"parameters": {
										"race_url": {
											"value": "@concat(item()['season'],'.json?limit=1500')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_gen2_race",
									"type": "DatasetReference",
									"parameters": {
										"race_dir": {
											"value": "@concat('bronze/race/',string(utcnow('yyyyMMdd')))",
											"type": "Expression"
										},
										"file_name": {
											"value": "@concat(item()['season'],'.json')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "act_race_lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_for_seasons_iterate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"wildcardFolderPath": {
								"value": "@concat('bronze/race/',string(utcnow('yyyyMMdd')))",
								"type": "Expression"
							},
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_race_gen2_wofilename",
						"type": "DatasetReference",
						"parameters": {
							"race_dir": {
								"value": "@concat('bronze/race/',string(utcnow('yyyyMMdd')))",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_for_race_iterate",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "act_race_lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('act_race_lookup').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "execute_pipeline_for_activity",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_for_act",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"race_list": {
										"value": "@item().MRData.RaceTable.Races",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "act_set_start_time",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_time",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "act_lookup_job_status1",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_set_start_time",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "insert into formulaone_audit.job_metadata_tbl (job_id,job_name,task_name,start_time,status) VALUES ('@{formatDateTime(variables('start_time'),'yyyyMMddHHmm')}','ingest_seasons_api','seasons_api','@{variables('start_time')}',\n'In-Progress');\n\nselect job_id from formulaone_audit.job_metadata_tbl;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_post_formulaone",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_lookup_job_status2",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_copy_api_to_gen2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "UPDATE formulaone_audit.job_metadata_tbl\nSET end_time = '@{formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')}',status ='success'\nWHERE job_id = '@{formatDateTime(variables('start_time'),'yyyyMMddHHmm')}' AND task_name = 'seasons_api';\n\ninsert into formulaone_audit.job_metadata_tbl (job_id,job_name,task_name,start_time,status) VALUES ('@{formatDateTime(variables('start_time'),'yyyyMMddHHmm')}','ingest_race_api','race_api','@{variables('start_time')}',\n'In-Progress');\n\nselect job_id from formulaone_audit.job_metadata_tbl;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_post_formulaone",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "act_lookup_job_status3",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "act_for_race_iterate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzurePostgreSqlSource",
						"query": {
							"value": "UPDATE formulaone_audit.job_metadata_tbl\nSET end_time = '@{formatDateTime(utcnow(), 'yyyy-MM-dd HH:mm:ss')}',status ='success'\nWHERE job_id = '@{formatDateTime(variables('start_time'),'yyyyMMddHHmm')}' AND task_name = 'results_api';\n\nselect job_id from formulaone_audit.job_metadata_tbl;",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_post_formulaone",
						"type": "DatasetReference"
					}
				}
			}
		],
		"concurrency": 1,
		"variables": {
			"season_id": {
				"type": "String"
			},
			"round_id": {
				"type": "String"
			},
			"start_time": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-04-19T09:59:38Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}